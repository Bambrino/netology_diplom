resource "local_file" "hosts" {
  content = <<-DOC
    # Ansible inventory containing variable values from Terraform.
    # Generated by Terraform.

    
    all:
      hosts:
        master01:
          ansible_host: ${yandex_compute_instance.master01.network_interface.0.nat_ip_address}
          ip:  ${yandex_compute_instance.master01.network_interface.0.ip_address}
        #   ansible_ssh_user: "ubuntu"
        node01:
          ansible_host: ${yandex_compute_instance.node01.network_interface.0.nat_ip_address}
          ip:  ${yandex_compute_instance.node01.network_interface.0.ip_address}
        #   ansible_ssh_user: "ubuntu"
        node02:
          ansible_host: ${yandex_compute_instance.node02.network_interface.0.nat_ip_address}
          ip:  ${yandex_compute_instance.node02.network_interface.0.ip_address}
        #   ansible_ssh_user: "ubuntu"
        node03:
          ansible_host: ${yandex_compute_instance.node03.network_interface.0.nat_ip_address}
          ip:  ${yandex_compute_instance.node03.network_interface.0.ip_address}
        #   ansible_ssh_user: "ubuntu"
      children:
        kube_control_plane:
          hosts:
            master01:
        kube_node:
          hosts:
            node01:
            node02:
            node03:
        etcd:
          hosts:
            master01:
        k8s_cluster:
          children:
            kube_control_plane:
            kube_node:
        calico_rr:
          hosts: {}
    
      vars:
        ansible_user: "ubuntu"
        supplementary_addresses_in_ssl_keys: ['${yandex_compute_instance.master01.network_interface.0.nat_ip_address}']


    DOC
  filename = var.hosts_file

  depends_on = [
    yandex_compute_instance.master01,
    yandex_compute_instance.node01,
    yandex_compute_instance.node02,
    yandex_compute_instance.node03
  ]
}